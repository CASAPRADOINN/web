
         !DOCTYPE html
html lang=es
head
    meta charset=UTF-8
    meta name=viewport content=width=device-width, initial-scale=1.0
    titleReserva de Habitacionestitle
    !-- Tailwind CSS --
    script src=httpscdn.tailwindcss.comscript
    style
        @import url('httpsfonts.googleapis.comcss2family=Interwght@400;500;600;700&display=swap');
        body {
            font-family 'Inter', sans-serif;
            background-color #f3f4f6;
        }
        .calendar-grid {
            display grid;
            grid-template-columns repeat(7, 1fr);
            gap 1px;
            background-color #d1d5db;
            border-radius 8px;
            overflow hidden;
        }
        .day {
            text-align center;
            padding 8px 4px;
            background-color #ffffff;
            font-size 0.875rem;
            cursor pointer;
            transition background-color 0.2s ease, transform 0.2s ease;
        }
        .dayhovernot(.disabled)not(.selected) {
            background-color #e5e7eb;
        }
        .day.selected {
            background-color #10b981;
            color #ffffff;
            font-weight 600;
        }
        .day.disabled {
            color #9ca3af;
            cursor not-allowed;
        }
        .day-header {
            text-align center;
            padding 12px 4px;
            font-weight 600;
            background-color #f9fafb;
            color #4b5563;
        }
        .gallery-container {
            position relative;
            max-width 800px;
            margin 0 auto;
            overflow hidden;
            border-radius 12px;
            box-shadow 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        .gallery {
            display flex;
            transition transform 0.5s ease-in-out;
        }
        .gallery-item {
            min-width 100%;
            height 450px;
        }
        .gallery-item img {
            width 100%;
            height 100%;
            object-fit cover;
        }
        .gallery-nav button {
            position absolute;
            top 50%;
            transform translateY(-50%);
            background-color rgba(0, 0, 0, 0.5);
            color white;
            border none;
            padding 16px;
            cursor pointer;
            z-index 10;
            opacity 0.7;
            transition opacity 0.2s;
            border-radius 50%;
        }
        .gallery-nav buttonhover {
            opacity 1;
        }
        .gallery-nav .prev {
            left 10px;
        }
        .gallery-nav .next {
            right 10px;
        }
        .modal {
            display none;
            position fixed;
            z-index 50;
            left 0;
            top 0;
            width 100%;
            height 100%;
            overflow auto;
            background-color rgba(0, 0, 0, 0.8);
            justify-content center;
            align-items center;
        }
        .modal-content {
            background-color #fff;
            padding 24px;
            border-radius 12px;
            max-width 500px;
            text-align center;
        }
        .close-modal {
            float right;
            font-size 28px;
            font-weight bold;
            color #aaa;
            cursor pointer;
        }
        .close-modalhover, .close-modalfocus {
            color #000;
            text-decoration none;
            cursor pointer;
        }
    style
head
body class=bg-gray-100 p-8

div class=max-w-4xl mx-auto bg-white p-8 rounded-xl shadow-lg
    h1 class=text-4xl font-bold text-center text-gray-800 mb-6Reserva tu Casah1
    p class=text-center text-gray-600 mb-10Selecciona las fechas de tu estancia y completa el formulario.p

    !-- Sección de la galería de fotos --
    div class=mb-12
        h2 class=text-3xl font-semibold text-center text-gray-700 mb-6Fotografías de las Habitacionesh2
        div class=gallery-container
            div id=gallery class=gallery
                !-- Las imágenes se insertarán aquí dinámicamente --
            div
            div class=gallery-nav
                button class=prev id=prevBtn&#10094;button
                button class=next id=nextBtn&#10095;button
            div
        div
    div
    
    !-- Contenedor del calendario --
    div class=mb-10 p-6 bg-gray-50 rounded-lg shadow-inner
        div class=flex justify-between items-center mb-4
            button id=prevMonth class=bg-gray-200 hoverbg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-full transition-colors&#9664;button
            h2 id=currentMonthYear class=text-2xl font-bold text-gray-800h2
            button id=nextMonth class=bg-gray-200 hoverbg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-full transition-colors&#9654;button
        div
        div class=calendar-grid
            div class=day-headerLundiv
            div class=day-headerMardiv
            div class=day-headerMiédiv
            div class=day-headerJuediv
            div class=day-headerViediv
            div class=day-headerSábdiv
            div class=day-headerDomdiv
            div id=calendar-daysdiv
        div
    div

    !-- Formulario de reserva --
    div id=booking-form class=hidden p-6 bg-green-50 rounded-lg shadow-inner
        h3 class=text-xl font-semibold mb-4 text-green-700Realizar Reservah3
        p class=text-green-600 mb-4Fechas seleccionadas span id=selected-dates class=font-mediumspanp
        div class=grid mdgrid-cols-2 gap-6
            input type=text id=name placeholder=Tu Nombre class=w-full px-4 py-2 border border-gray-300 rounded-lg focusoutline-none focusring-2 focusring-green-500
            input type=email id=email placeholder=Tu Correo Electrónico class=w-full px-4 py-2 border border-gray-300 rounded-lg focusoutline-none focusring-2 focusring-green-500
            textarea id=message placeholder=Mensaje (opcional) rows=3 class=w-full px-4 py-2 border border-gray-300 rounded-lg focusoutline-none focusring-2 focusring-green-500 mdcol-span-2textarea
        div
        button id=submit-booking class=w-full mt-6 px-6 py-3 bg-green-600 text-white font-bold rounded-lg hoverbg-green-700 transition-colorsConfirmar Reservabutton
    div
div

!-- Modal para mensajes --
div id=message-modal class=modal
    div class=modal-content
        span class=close-modal&times;span
        h3 id=modal-title class=text-2xl font-semibold mb-4 text-gray-800h3
        p id=modal-message class=text-gray-600p
    div
div

script type=module
     Firebase Imports
    import { initializeApp } from httpswww.gstatic.comfirebasejs11.6.1firebase-app.js;
    import { getAuth, signInAnonymously, signInWithCustomToken } from httpswww.gstatic.comfirebasejs11.6.1firebase-auth.js;
    import { getFirestore, doc, getDoc, setDoc, collection, query, where, getDocs, runTransaction } from httpswww.gstatic.comfirebasejs11.6.1firebase-firestore.js;

     Global variables from Canvas environment
    const appId = typeof __app_id !== 'undefined'  __app_id  'default-app-id';
    const firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined'  __firebase_config  '{}');
    const initialAuthToken = typeof __initial_auth_token !== 'undefined'  __initial_auth_token  null;

     Firebase Initialization
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    const auth = getAuth(app);

     Initial user authentication
    async function initAuth() {
        if (initialAuthToken) {
            try {
                await signInWithCustomToken(auth, initialAuthToken);
                console.log(Signed in with custom token.);
            } catch (error) {
                console.error(Custom token sign-in failed, error);
                await signInAnonymously(auth);
            }
        } else {
            await signInAnonymously(auth);
            console.log(Signed in anonymously.);
        }
    }

    let selectedDates = [];
    const calendarDaysEl = document.getElementById('calendar-days');
    const currentMonthYearEl = document.getElementById('currentMonthYear');
    const prevMonthBtn = document.getElementById('prevMonth');
    const nextMonthBtn = document.getElementById('nextMonth');
    const bookingFormEl = document.getElementById('booking-form');
    const selectedDatesEl = document.getElementById('selected-dates');
    const submitBookingBtn = document.getElementById('submit-booking');
    const modalEl = document.getElementById('message-modal');
    const closeModalBtn = document.querySelector('.close-modal');
    const modalTitleEl = document.getElementById('modal-title');
    const modalMessageEl = document.getElementById('modal-message');

     Gallery elements
    const galleryEl = document.getElementById('gallery');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    let currentIndex = 0;

     URLs de las imágenes que subiste
    const imageUrls = [
        httpsplacehold.co800x450A3E635000000text=Habitacion+1,
        httpsplacehold.co800x4504ade80000000text=Habitacion+2,
        httpsplacehold.co800x45022d3ee000000text=Habitacion+3,
        httpsplacehold.co800x45060a5fa000000text=Habitacion+4,
        httpsplacehold.co800x450c4b5fd000000text=Habitacion+5
    ];

     Placeholder images for the rooms, replace these with the actual image URLs from GitHub
     If you upload the images to your GitHub repository, the URL would be something like
     `httpsraw.githubusercontent.comusernamerepo_namebranchrutaimagen.jpg`
     Example httpsraw.githubusercontent.commiusuariomiproyectomainhabitacioneshabitacion1.jpg
     To get the raw URL, go to your image in GitHub, click Raw and copy the URL.

     I will use placeholders for now. Replace these with your actual image URLs later.
    const roomImages = [
        httpsplacehold.co800x4504ade80000000text=Habitacion+1,
        httpsplacehold.co800x45022d3ee000000text=Habitacion+2,
        httpsplacehold.co800x45060a5fa000000text=Habitacion+3,
        httpsplacehold.co800x450fca5a5000000text=Cocina,
        httpsplacehold.co800x450fdba74000000text=Exterior
    ];

    function createGallery() {
        galleryEl.innerHTML = '';
        roomImages.forEach(src = {
            const item = document.createElement('div');
            item.className = 'gallery-item';
            const img = document.createElement('img');
            img.src = src;
            img.alt = 'Foto de la habitación';
            item.appendChild(img);
            galleryEl.appendChild(item);
        });
    }
    
    function updateGallery() {
        const width = galleryEl.querySelector('.gallery-item').clientWidth;
        galleryEl.style.transform = `translateX(${-width  currentIndex}px)`;
    }

    prevBtn.addEventListener('click', () = {
        currentIndex = (currentIndex  0)  currentIndex - 1  roomImages.length - 1;
        updateGallery();
    });

    nextBtn.addEventListener('click', () = {
        currentIndex = (currentIndex  roomImages.length - 1)  currentIndex + 1  0;
        updateGallery();
    });

     Handle window resize to keep the gallery responsive
    window.addEventListener('resize', updateGallery);

     Initial calendar setup
    let currentDate = new Date();

    const showMessage = (title, message) = {
        modalTitleEl.textContent = title;
        modalMessageEl.textContent = message;
        modalEl.style.display = 'flex';
    };

    closeModalBtn.onclick = () = {
        modalEl.style.display = 'none';
    };

    window.onclick = (event) = {
        if (event.target == modalEl) {
            modalEl.style.display = 'none';
        }
    };

     Firebase data handling
    const getBookings = async (year, month) = {
        const userId = auth.currentUser.uid  crypto.randomUUID();
        const collectionPath = `artifacts${appId}users${userId}bookings`;
        const bookingsCol = collection(db, collectionPath);
        const startOfMonth = new Date(year, month, 1);
        const endOfMonth = new Date(year, month + 1, 0);

        try {
            const q = query(bookingsCol, where('checkIn', '=', startOfMonth.toISOString().split('T')[0]), where('checkIn', '=', endOfMonth.toISOString().split('T')[0]));
            const bookingSnapshot = await getDocs(q);
            return bookingSnapshot.docs.map(doc = doc.data());
        } catch (e) {
            console.error(Error fetching bookings, e);
            return [];
        }
    };

    const renderCalendar = async () = {
        calendarDaysEl.innerHTML = '';
        selectedDates = [];
        bookingFormEl.classList.add('hidden');
        
        const year = currentDate.getFullYear();
        const month = currentDate.getMonth();
        currentMonthYearEl.textContent = currentDate.toLocaleString('es-ES', { month 'long', year 'numeric' });

        const firstDayOfMonth = new Date(year, month, 1).getDay();
        const daysInMonth = new Date(year, month + 1, 0).getDate();
        
        const bookedDates = (await getBookings(year, month)).map(b = b.checkIn);

         Add empty days for the offset
        for (let i = 0; i  (firstDayOfMonth === 0  6  firstDayOfMonth - 1); i++) {
            const emptyDay = document.createElement('div');
            emptyDay.className = 'day disabled';
            calendarDaysEl.appendChild(emptyDay);
        }

         Add days of the month
        for (let i = 1; i = daysInMonth; i++) {
            const dayEl = document.createElement('div');
            dayEl.className = 'day';
            dayEl.textContent = i;
            
            const fullDate = new Date(year, month, i);
            const isoDate = fullDate.toISOString().split('T')[0];

            if (fullDate  new Date()  bookedDates.includes(isoDate)) {
                dayEl.classList.add('disabled');
            } else {
                dayEl.addEventListener('click', () = handleDayClick(isoDate, dayEl));
            }
            
            calendarDaysEl.appendChild(dayEl);
        }
    };

    const handleDayClick = (date, element) = {
        if (element.classList.contains('selected')) {
             Deselect day
            element.classList.remove('selected');
            selectedDates = selectedDates.filter(d = d !== date);
        } else {
             Select day
            element.classList.add('selected');
            selectedDates.push(date);
        }
        selectedDates.sort();

        if (selectedDates.length  0) {
            selectedDatesEl.textContent = selectedDates.join(', ');
            bookingFormEl.classList.remove('hidden');
        } else {
            bookingFormEl.classList.add('hidden');
        }
    };

     Form submission
    submitBookingBtn.addEventListener('click', async () = {
        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        const message = document.getElementById('message').value;

        if (!name  !email  selectedDates.length === 0) {
            showMessage('Error', 'Por favor, introduce tu nombre, correo electrónico y selecciona al menos una fecha.');
            return;
        }

        const userId = auth.currentUser.uid  crypto.randomUUID();
        const bookingsCollection = collection(db, `artifacts${appId}users${userId}bookings`);
        const userDocRef = doc(db, `artifacts${appId}users${userId}profile`, 'info');

        try {
             Use a transaction to ensure atomic operations
            await runTransaction(db, async (transaction) = {
                const bookingData = {
                    name,
                    email,
                    message,
                    checkIn selectedDates[0],
                    checkOut selectedDates[selectedDates.length - 1],
                    dates selectedDates,
                    createdAt new Date().toISOString()
                };

                const bookingDocRef = doc(bookingsCollection);
                transaction.set(bookingDocRef, bookingData);
                transaction.set(userDocRef, { lastBookingDate new Date().toISOString() }, { merge true });
            });
            
            showMessage('¡Reserva Exitosa!', 'Tu reserva ha sido enviada. Nos pondremos en contacto contigo pronto. Gracias!');
             Reset state
            selectedDates = [];
            bookingFormEl.classList.add('hidden');
            renderCalendar();  Re-render to show updated bookings
        } catch (e) {
            console.error(Transaction failed, e);
            showMessage('Error', 'Hubo un problema al procesar tu reserva. Por favor, inténtalo de nuevo.');
        }
    });

    prevMonthBtn.addEventListener('click', () = {
        currentDate.setMonth(currentDate.getMonth() - 1);
        renderCalendar();
    });

    nextMonthBtn.addEventListener('click', () = {
        currentDate.setMonth(currentDate.getMonth() + 1);
        renderCalendar();
    });

     Initial load
    window.onload = async function() {
        await initAuth();
        createGallery();
        updateGallery();
        renderCalendar();
    };
script

body
html